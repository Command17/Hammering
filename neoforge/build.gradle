plugins {
    id 'com.github.johnrengelman.shadow'
    id 'me.modmuss50.mod-publish-plugin'
}

version = "${mod_version}+mc${minecraft_version}-neoforge"

architectury {
    platformSetupLoomIde()
    neoForge()
}

var generatedResources = project(":common").file("src/main/generated")

// Add the generated resources to the main source set
sourceSets {
    main {
        resources {
            srcDirs += [
                    generatedResources
            ]
        }
    }
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    modImplementation "com.github.command17:enchantedbooklib:${enchantedbooklib_version}+mc${project.minecraft_version}-neoforge"
    forgeDependencies "blue.endless:jankson:1.2.3"

    // Recipe Viewer!!!!
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-neoforge:${project.rei_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

var changelogText = rootProject.file("Changelog.md").text

publishMods {
    file = remapJar.archiveFile
    modLoaders.add("neoforge")
    displayName = "Hammering v${project.version}"
    changelog = changelogText

    if (project.release_type == "alpha") {
        type = ALPHA
    } else if (project.release_type == "beta") {
        type = BETA
    } else if (project.release_type == "stable") {
        type = STABLE
    }

    modrinth {
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        projectId = "mBPfL1U7"
        minecraftVersions.add(minecraft_version)

        // EnchantedBookLib
        requires {
            id = "36JtkTh1"
        }
    }

    curseforge {
        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
        clientRequired = true
        serverRequired = true
        javaVersions.add(JavaVersion.VERSION_21)
        projectId = "1136760"
        minecraftVersions.add(minecraft_version)

        requires("enchantedbooklib")
    }

    github {
        accessToken = providers.environmentVariable("GITHUB_TOKEN")
        parent project(":").tasks.named("publishGithub")
    }
}